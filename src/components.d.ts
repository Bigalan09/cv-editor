/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface CvContactItem {
        "icon": string;
    }
    interface CvEmployment {
        /**
          * @default []
         */
        "achievements": string[];
        /**
          * @default '#2c5f6f'
         */
        "bulletColor": string;
        "company": string;
        "period": string;
        "position": string;
        /**
          * @default '#2c5f6f'
         */
        "titleColor": string;
    }
    interface CvHeader {
        /**
          * @default '#2c5f6f'
         */
        "color": string;
        "jobRole": string;
        "name": string;
    }
    interface CvMain {
    }
    interface CvProfileImage {
        /**
          * @default 'Profile Image'
         */
        "alt": string;
        /**
          * @default 'https://via.placeholder.com/200x200/4A90A4/FFFFFF?text=AG'
         */
        "src": string;
    }
    interface CvSection {
        /**
          * @default "#2c5f6f"
         */
        "color": string;
        "sectionTitle": string;
    }
    interface CvSidebar {
        /**
          * @default 'rgb(218, 228, 235)'
         */
        "backgroundColor": string;
    }
    interface CvSkillsList {
        /**
          * @default '#2c5f6f'
         */
        "bulletColor": string;
        /**
          * @default []
         */
        "skills": string[];
    }
}
declare global {
    interface HTMLCvContactItemElement extends Components.CvContactItem, HTMLStencilElement {
    }
    var HTMLCvContactItemElement: {
        prototype: HTMLCvContactItemElement;
        new (): HTMLCvContactItemElement;
    };
    interface HTMLCvEmploymentElement extends Components.CvEmployment, HTMLStencilElement {
    }
    var HTMLCvEmploymentElement: {
        prototype: HTMLCvEmploymentElement;
        new (): HTMLCvEmploymentElement;
    };
    interface HTMLCvHeaderElement extends Components.CvHeader, HTMLStencilElement {
    }
    var HTMLCvHeaderElement: {
        prototype: HTMLCvHeaderElement;
        new (): HTMLCvHeaderElement;
    };
    interface HTMLCvMainElement extends Components.CvMain, HTMLStencilElement {
    }
    var HTMLCvMainElement: {
        prototype: HTMLCvMainElement;
        new (): HTMLCvMainElement;
    };
    interface HTMLCvProfileImageElement extends Components.CvProfileImage, HTMLStencilElement {
    }
    var HTMLCvProfileImageElement: {
        prototype: HTMLCvProfileImageElement;
        new (): HTMLCvProfileImageElement;
    };
    interface HTMLCvSectionElement extends Components.CvSection, HTMLStencilElement {
    }
    var HTMLCvSectionElement: {
        prototype: HTMLCvSectionElement;
        new (): HTMLCvSectionElement;
    };
    interface HTMLCvSidebarElement extends Components.CvSidebar, HTMLStencilElement {
    }
    var HTMLCvSidebarElement: {
        prototype: HTMLCvSidebarElement;
        new (): HTMLCvSidebarElement;
    };
    interface HTMLCvSkillsListElement extends Components.CvSkillsList, HTMLStencilElement {
    }
    var HTMLCvSkillsListElement: {
        prototype: HTMLCvSkillsListElement;
        new (): HTMLCvSkillsListElement;
    };
    interface HTMLElementTagNameMap {
        "cv-contact-item": HTMLCvContactItemElement;
        "cv-employment": HTMLCvEmploymentElement;
        "cv-header": HTMLCvHeaderElement;
        "cv-main": HTMLCvMainElement;
        "cv-profile-image": HTMLCvProfileImageElement;
        "cv-section": HTMLCvSectionElement;
        "cv-sidebar": HTMLCvSidebarElement;
        "cv-skills-list": HTMLCvSkillsListElement;
    }
}
declare namespace LocalJSX {
    interface CvContactItem {
        "icon"?: string;
    }
    interface CvEmployment {
        /**
          * @default []
         */
        "achievements"?: string[];
        /**
          * @default '#2c5f6f'
         */
        "bulletColor"?: string;
        "company"?: string;
        "period"?: string;
        "position"?: string;
        /**
          * @default '#2c5f6f'
         */
        "titleColor"?: string;
    }
    interface CvHeader {
        /**
          * @default '#2c5f6f'
         */
        "color"?: string;
        "jobRole"?: string;
        "name"?: string;
    }
    interface CvMain {
    }
    interface CvProfileImage {
        /**
          * @default 'Profile Image'
         */
        "alt"?: string;
        /**
          * @default 'https://via.placeholder.com/200x200/4A90A4/FFFFFF?text=AG'
         */
        "src"?: string;
    }
    interface CvSection {
        /**
          * @default "#2c5f6f"
         */
        "color"?: string;
        "sectionTitle"?: string;
    }
    interface CvSidebar {
        /**
          * @default 'rgb(218, 228, 235)'
         */
        "backgroundColor"?: string;
    }
    interface CvSkillsList {
        /**
          * @default '#2c5f6f'
         */
        "bulletColor"?: string;
        /**
          * @default []
         */
        "skills"?: string[];
    }
    interface IntrinsicElements {
        "cv-contact-item": CvContactItem;
        "cv-employment": CvEmployment;
        "cv-header": CvHeader;
        "cv-main": CvMain;
        "cv-profile-image": CvProfileImage;
        "cv-section": CvSection;
        "cv-sidebar": CvSidebar;
        "cv-skills-list": CvSkillsList;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "cv-contact-item": LocalJSX.CvContactItem & JSXBase.HTMLAttributes<HTMLCvContactItemElement>;
            "cv-employment": LocalJSX.CvEmployment & JSXBase.HTMLAttributes<HTMLCvEmploymentElement>;
            "cv-header": LocalJSX.CvHeader & JSXBase.HTMLAttributes<HTMLCvHeaderElement>;
            "cv-main": LocalJSX.CvMain & JSXBase.HTMLAttributes<HTMLCvMainElement>;
            "cv-profile-image": LocalJSX.CvProfileImage & JSXBase.HTMLAttributes<HTMLCvProfileImageElement>;
            "cv-section": LocalJSX.CvSection & JSXBase.HTMLAttributes<HTMLCvSectionElement>;
            "cv-sidebar": LocalJSX.CvSidebar & JSXBase.HTMLAttributes<HTMLCvSidebarElement>;
            "cv-skills-list": LocalJSX.CvSkillsList & JSXBase.HTMLAttributes<HTMLCvSkillsListElement>;
        }
    }
}
